@use "screenshift-responsive" as *;

$screenshift-spacing-xs: 4px !default;
$screenshift-spacing-sm: 8px !default;
$screenshift-spacing-md: 12px !default;
$screenshift-spacing-lg: 16px !default;
$screenshift-spacing: $screenshift-spacing-sm !default;
$screenshift-debug-color: red !default;

// Simplified breakpoint extraction
@function screenshift-bp($breakpoint, $key) {
  @return map-get(map-get($screenshift-breakpoints, $breakpoint), $key);
}

// Define breakpoint variables for easy media query usage
$screenshift-xs: screenshift-bp(xs, max);
$screenshift-sm: screenshift-bp(sm, max);
$screenshift-md: screenshift-bp(md, max);
$screenshift-lg: screenshift-bp(lg, max);
$screenshift-xl: screenshift-bp(xl, max);
$screenshift-xl2: screenshift-bp(xl2, max);
$screenshift-xxl: screenshift-bp(xxl, max);
$screenshift-xxxl: screenshift-bp(xxxl, min);

[data-screenshift] {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  max-width: screenshift-bp(xxxl, container-max-width);
  padding-left: 0;
  padding-right: 0;

  @media (max-width: $screenshift-xxl) {
    max-width: screenshift-bp(xl2, container-max-width);
  }

  @media (max-width: $screenshift-xl2) {
    max-width: screenshift-bp(xl, container-max-width);
  }

  @media (max-width: $screenshift-xl) {
    max-width: screenshift-bp(lg, container-max-width);
  }

  @media (max-width: $screenshift-lg) {
    max-width: screenshift-bp(md, container-max-width);
  }

  @media (max-width: $screenshift-md) {
    max-width: screenshift-bp(sm, container-max-width);
    padding-left: $screenshift-spacing-lg;
    padding-right: $screenshift-spacing-lg;
  }

  @media (max-width: $screenshift-sm) {
    max-width: screenshift-bp(xs, container-max-width);
    padding-left: $screenshift-spacing-lg;
    padding-right: $screenshift-spacing-lg;
  }

  @media (max-width: $screenshift-xs) {
    max-width: 100%;
    padding-left: $screenshift-spacing-lg;
    padding-right: $screenshift-spacing-lg;
  }
}

// --- Visual Debug Styling ---
[data-screenshift="debug"] {
  position: relative;
  outline: 2px dashed rgba($screenshift-debug-color, 0.5);
  border-radius: $screenshift-spacing-md;
  outline-offset: 10px;

  &::after {
    display: block;
    content: "";
    position: absolute;
    transform: translate(-20px, 25px);
    color: white;
    font-size: 16px;
    font-weight: bold;
    padding: $screenshift-spacing $screenshift-spacing-md;
    background: $screenshift-debug-color;
    border-radius: $screenshift-spacing-lg;
    z-index: 99998;
    pointer-events: none;
  }

  // XXXL Viewport
  @media (min-width: screenshift-bp(xxxl, min)) {
    &::after {
      content: "xxxl - min:" + screenshift-bp(xxxl, min) + " - " +
        screenshift-bp(xxxl, label) + " - max-width:" +
        screenshift-bp(xxxl, container-max-width);
    }
  }

  // XXL Viewport
  @media (max-width: screenshift-bp(xxxl, min)) and (min-width: screenshift-bp(xxl, min)) {
    &::after {
      content: "xxl - min:" + screenshift-bp(xxl, min) + " max:" +
        screenshift-bp(xxl, max) + " - " + screenshift-bp(xxl, label) +
        " - max-width:" + screenshift-bp(xxl, container-max-width);
    }
  }

  // XL2 Viewport
  @media (max-width: screenshift-bp(xxl, max)) and (min-width: screenshift-bp(xl2, min)) {
    &::after {
      content: "xl2 - min:" + screenshift-bp(xl2, min) + " max:" +
        screenshift-bp(xl2, max) + " - " + screenshift-bp(xl2, label) +
        " - max-width:" + screenshift-bp(xl2, container-max-width);
    }
  }

  // XL Viewport
  @media (max-width: screenshift-bp(xl2, max)) and (min-width: screenshift-bp(xl, min)) {
    &::after {
      content: "xl - min:" + screenshift-bp(xl, min) + " max:" +
        screenshift-bp(xl, max) + " - " + screenshift-bp(xl, label) +
        " - max-width:" + screenshift-bp(xl, container-max-width);
    }
  }

  // LG Viewport
  @media (max-width: screenshift-bp(xl, max)) and (min-width: screenshift-bp(lg, min)) {
    &::after {
      content: "lg - min:" + screenshift-bp(lg, min) + " max:" +
        screenshift-bp(lg, max) + " - " + screenshift-bp(lg, label) +
        " - max-width:" + screenshift-bp(lg, container-max-width);
    }
  }

  // MD Viewport
  @media (max-width: screenshift-bp(lg, max)) and (min-width: screenshift-bp(md, min)) {
    &::after {
      content: "md - min:" + screenshift-bp(md, min) + " max:" +
        screenshift-bp(md, max) + " - " + screenshift-bp(md, label) +
        " - max-width:" + screenshift-bp(md, container-max-width);
    }
  }

  // SM Viewport
  @media (max-width: screenshift-bp(md, max)) and (min-width: screenshift-bp(sm, min)) {
    &::after {
      content: "sm - min:" + screenshift-bp(sm, min) + " max:" +
        screenshift-bp(sm, max) + " - " + screenshift-bp(sm, label) +
        " - max-width:" + screenshift-bp(sm, container-max-width);
    }
  }

  // XS Viewport
  @media (max-width: screenshift-bp(sm, max)) and (min-width: screenshift-bp(xs, min)) {
    &::after {
      content: "xs - min:" + screenshift-bp(xs, min) + " max:" +
        screenshift-bp(xs, max) + " - " + screenshift-bp(xs, label) +
        " - max-width:" + screenshift-bp(xs, container-max-width);
    }
  }
}
